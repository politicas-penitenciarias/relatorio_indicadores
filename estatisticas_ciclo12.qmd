# Junho de 2022 - 12° Ciclo {#sec-parametros-indicadores-ciclo12}

```{r}
library(tidyverse)
library(knitr)
library(plotly)
library(kableExtra)
library(DT)
library(gganimate)
library(formattable)
library(abjutils)
library(janitor)
library(ggforce) #UTILIZA FACET_WRAP_PAGINATE

cores <- c("#294661","#7F312F","#808080","#B8860B","#5E3B56","#5F9EA0","#808000","#A0522D",
           "#F5DEB3","#FF9900","#8B008B","#5F6B6D","#FB8281","#F4D25A","#7F898A","#A4DDEE",
           "#FDAB89","#B687AC","#28738A","#A78F8F","#168980","darkred","#0000FF","#00FFFF",
           "#DAA520","#DEB887") #VETOR DE CORES PARA OS GRAFICOS


vetor_filtro_ciclo <- 12
vetor_filtro_semestre <- "primeiro"
vetor_filtro_ano <- 2022
vetor_modalidade <- c("Custódia em unidade prisional",
                      "Domiciliar monitorado eletronicamente",
                      "Domiciliar não monitorado eletronicamente",
                      "Custódia em carceragens ou batalhões"
                    )
```

Este capítulo traz as informações pormenorizadas acerca do `r str_c(vetor_filtro_ciclo,"°")` ciclo do Levantamento Nacional de Informações Penitenciárias - Infopen - referente ao `r vetor_filtro_semestre` semestre de `r vetor_filtro_ano`.

O objetivo principal é mapear as características do Sistema Penitenciário Nacional (SPN) de acordo com as áreas de atuação da Diretoria de Políticas Penitenciárias - Dirpp. Especificamente, este capítulo visa: gerar índices / indicadores para apoio a tomada de decisão dos gestores; e explicar as informações em formatos descritivo, gráfico e tabular;

Para melhor organização, este capítulo está dividido em tópicos a depender do assunto tratado.

A [seção @sec-populacao-prisional-ciclo12] trata do indicadores que definem a população prisional brasileira considerando os diversos tipos de estabelecimentos, regimes de custódia, gênero do custodiados, modalidade de cumprimento de pena, além dos aspectos legais vinculados.

O próximo tópico ([seção @sec-capacidade-prisional-ciclo12]) estabelece os valores vinculados às capacidades dos estabelecimentos prisionais contabilizando as vagas do sistema. A metodologia segrega o espaço interno das unidades através das particularidades dos regimes de custódia, gênero dos custodiados e tipos de estabelecimento.

A ocupação do sistema penitenciário é estudada na [seção @sec-ocupacao-ciclo12]. A taxa de ocupação resume, em valores relativos, a organização do espaço interno às unidades prisionais considerando os indicadores de população e capacidade analisados nas seções anteriores.

A relação entre a população e a capacidade do Sistema Penitenciário Nacional é novamente analisada na [seção @sec-vagas-ciclo12], porém utiliza-se outra metodologia resultando nos valores absolutos para a falta ou excesso de vagas no sistema. O cálculo do valor de déficit / superávit de vagas considera as particularidades da população prisional e das capacidades internas às unidades penitenciárias.

A [seção @sec-aprisionamento-ciclo12] compara a população prisional com indicadores populacionais do Instituto Brasileiro de Geografia e Estatística (IBGE). Com o cruzamento desses dados obtêm-se as taxas de aprisionamento e penalização. Apesar de terem suas particularidade e considerarem variáveis diferentes, ambas as taxas resumem a quantidade de pessoas cumprindo pena a cada porção de 100.000 habitantes em territórios nacional ou estadual.

## População Prisional {#sec-populacao-prisional-ciclo12}

```{r}
populacao01_soma_brasil <- 
  readRDS("../data/data_rds/rel02_populacao06.rds") |> 
  filter(ciclo == vetor_filtro_ciclo)

populacao02_soma_brasil_sexo <- 
  readRDS("../data/data_rds/rel02_populacao06.rds") |> 
  filter(ciclo == vetor_filtro_ciclo) |> 
  group_by(sexo) |> 
  summarise(
    qtd = sum(qtd,na.rm = TRUE)
  )
```

Os indicadores populacionais do Sistema Penitenciário Nacional são de extrema relevância para a ampla compreensão do cenário da execução penal no Brasil, pois serve de base para implantação de políticas públicas, aplicação de investimentos financeiros e, além disso, fundamenta outros índices e indicadores.

Este tópico levanta a quantidade de pessoas cumprindo pena no país com o objetivo principal de quantificar e tipificar a população de pessoas presas. Em segundo plano: segmenta os números pelos diversos tipos de estabelecimentos e regimes de custódia; e quantifica os custodiados por gênero.

A [subseção @sec-indicadores-populacionais-brasil-ciclo12] trata do indicadores populacionais em âmbito nacional de forma tabular e gráfica em valores percentuais (relativos) e absolutos. Realiza-se o estudo da população prisional considerando as modalidades de custódia, e gêneros.

A [subseção @sec-indicadores-populacionais-uf-ciclo12] mantém a metodologia da subseção com a mitigação do estudo por unidade federativa.

### Indicadores Populacionais - Brasil {#sec-indicadores-populacionais-brasil-ciclo12}

Para este ciclo foram contabilizadas **`r format(sum(populacao01_soma_brasil$qtd), big.mark = ".", decimal.mark = ",")`** pessoas cumprindo algum tipo de medida punitiva em âmbitos estadual ou federal (população prisional geral). Desse universo, **`r format(sum(populacao02_soma_brasil_sexo$qtd[2]),big.mark = ".", decimal.mark = ",")`** são do sexo masculino, enquanto **`r format(sum(populacao02_soma_brasil_sexo$qtd[1]),big.mark = ".", decimal.mark = ",")`** pertencem ao sexo feminino. Dessa forma, tem-se que a população feminina representa **`r format(round(populacao02_soma_brasil_sexo$qtd[1]/sum(populacao01_soma_brasil$qtd)*100,digits = 2),big.mark = ".", decimal.mark = ",")`**% da população prisional brasileira, além disso, pode-se afirmar que a população prisional feminina está **`r format(round(populacao02_soma_brasil_sexo$qtd[2]/populacao02_soma_brasil_sexo$qtd[1],digits = 2),big.mark = ".", decimal.mark = ",")`** vezes menor que a população de pessoas privadas de liberdade do sexo masculino.

::: callout-note
*A população prisional geral é formada por pessoas cumprindo pena em todas as modalidades de custódia, sendo custodiados em: estabelecimentos prisionais; carceragens e batalhões de polícia; prisão domiciliar; e prisão domiciliar com monitoramento eletrônico.*
:::

Porém, essa análise não leva em consideração as proporções de gênero entre os habitantes em território nacional. De acordo com projeções do Instituto brasileiro de Geografia e Estatística - IBGE - as mulheres são maioria no país. Uma análise pormenorizada é realizada no tópico que trata sobre aprisionamento no Brasil ([seção @sec-aprisionamento-ciclo12]).

As modalidades de custódia são relativas ao local e forma do cumprimento de pena, classificadas em:

-   **Custódia em unidade prisional:** modalidade formada por pessoas custodiadas em unidades prisionais estaduais ou federais - penitenciárias, presídios, cadeias públicas, hospitais psiquiátricos, colônias industriais / agrícolas, casa do albergado, entre outros similares - administradas pelos órgãos da execução penal do poder executivo, tais como Secretarias / Institutos de Justiça e/ou Administração Penitenciária, entre outros.\
-   **Custódia em carceragens ou batalhões:** contêm pessoas presas em carceragens de polícias civil ou federal, além de pessoas sob custódia em batalhões de polícia ou corpo de bombeiro militares;
-   **Domiciliar monitorado eletronicamente:** pessoas cumprindo pena em prisão domiciliar com monitoração eletrônica (tornozeleira eletrônica ou outro dispositivo);
-   **Domiciliar [não]{.underline} monitorado eletronicamente:** pessoas cumprindo pena em prisão domiciliar sem monitoração eletrônica;

A tabela abaixo detalha os indicadores populacionais do sistema separando-os de acordo com as modalidades supracitadas.

 

```{r}

t1 <- 
  readRDS("../data/data_rds/rel02_populacao06.rds") |> 
  filter(ciclo == vetor_filtro_ciclo) |> 
  group_by(modalidade,sexo) |> 
  summarise(
    qtd = sum(qtd,na.rm = TRUE)
  ) |> 
  pivot_wider(
    names_from = sexo,
    values_from = qtd
  ) |> 
  mutate(
    Total = Masculino + Feminino
  ) |> 
  arrange(desc(Total)) |> 
  adorn_totals()
names(t1) <- c("Modalidade","Feminino","Masculino","Total")
t2 <- t1

formattable::formattable(
    t1,
    align = c("c","l","l","l"),
    list(
    #`Modalidade` = color_tile("lightgrey","orange"),
    `Feminino` = color_bar("lightgrey"),
    `Masculino`= color_bar("lightgrey"),
    `Total`= color_bar("lightblue")
  )) |> 
 as.datatable(
    extensions = 'Buttons',
    escape = FALSE,
    #caption = "Quantidade de pessoas cumprindo penas estratificadas por tipo de custódia (modalidade) e sexo.",
    rownames = FALSE,
    class='display', #'hover cell-border stripe',
    filter = "top",
    style = "bootstrap4",
    selection = c("multiple"), #c("multiple", "single", "none"),
    options = list(
      dom='Bfrtip',
      buttons=c('copy', 'csv', 'excel', 'print', 'pdf'),
      autoFill = TRUE,
      colReorder = TRUE,
      pageLength = 10, 
      lengthMenu = seq(10,max(nrow(t2))+10,10),
      autoWidth = TRUE,
      initComplete = JS(
        "function(settings, json) {",
        #"$(this.api().table().header()).css({'background-color': '#000', 'color': '#fff'});", - #CONFIGURACAO DO CABECALHO
        "$('body').css({'font-family': 'Calibri'});",
        "}"
      ),
      language = list(
        info = 'Mostrando de _START_ para _END_ em um total de _TOTAL_ registros',
        paginate = list(previous = 'Anterior', `next` = 'Seguinte'),
        url = '//cdn.datatables.net/plug-ins/1.10.11/i18n/Portuguese-Brasil.json'
      )
    )
  )


  
```

   

Os próximos quadros resumem graficamente a tabela acima. A @fig-indicadores-populacionais1-ciclo12 relaciona as variáveis modalidade e sexo, dessa forma, mostra a incidência de cada uma em números absolutos.

```{r}
#| label: fig-indicadores-populacionais1-ciclo12
#| fig-cap: >  
#|       Incidência de cada modalidade de custódia em valores absolutos separadas por sexo.

p1 <- 
 readRDS("../data/data_rds/rel02_populacao06.rds") |> 
  filter(ciclo == vetor_filtro_ciclo) |> 
  group_by(modalidade,sexo) |> 
  summarise(
    qtd = sum(qtd,na.rm = TRUE)
  ) |> 
  pivot_wider(
    names_from = sexo,
    values_from = qtd
  ) |> 
  mutate(
    modalidade = factor(modalidade,levels = vetor_modalidade, ordered = TRUE)
  )

p1 <- p1 |>
  plot_ly(
    x = ~ modalidade,
    y = ~ Masculino,
    name = "Masculino",
    type = 'bar',
    text = ~ Masculino,
    textposition = "auto",
    alpha = 0.7,
    marker = list(color = "#294661")
  )

p1 <- p1 |>
  add_trace(
    y = ~ `Feminino`,
    name = "Feminino",
    type = 'bar',
    text = ~ Feminino,
    textposition = "auto",
    alpha = 0.7,
    marker = list(color = "#7F312F")
  )

p1 <- p1 |> layout(
  dragmode='drawopenpath', # INCLUI A FERRAMENTA PARA DESENHO
  newshape=list(line = list(color='cyan', opacity = 0.5 )), 
  #title = "Tempos médios / 2021",
  uniformtext=list(minsize=8, mode='hide'),
  font = list(family = "Calibri", color = "#294661", size = 14.5),
  xaxis = list(title = ""),
  yaxis = list(title = "Quantidade"),
  legend = list(orientation = "v")
)

# CONFIGURACAO DAS FORMAS DE DESENHO NO GRAFICO
p1 <- config(
  p1,
  modeBarButtonsToAdd = list(
                           'drawline', 
                           'drawopenpath', 
                           'drawclosedpath', 
                           'drawcircle', 
                           'drawrect', 
                           'eraseshape'
                       )
  )  |> 
  layout(plot_bgcolor='#FFFFFF',
          xaxis = list(
            zerolinecolor = '#ffff',
            zerolinewidth = 2,
            gridcolor = 'ffff'),
          yaxis = list(
            zerolinecolor = '#ffff',
            zerolinewidth = 2,
            gridcolor = 'ffff')
          )

p1

```

 

A @fig-indicadores-populacionais2-ciclo12 evidencia os valores relativos de cada modalidade e, graficamente, mostra a proporção de incidência de cada possibilidade.

 

```{r}
#| label: fig-indicadores-populacionais2-ciclo12
#| fig-cap: >  
#|      Valores relativos e absolutos da incidência das modalidades de custódia. 


p1_relativo <- 
 readRDS("../data/data_rds/rel02_populacao06.rds") |> 
  filter(ciclo == vetor_filtro_ciclo) |> 
  group_by(modalidade) |> 
  summarise(
    qtd = sum(qtd,na.rm = TRUE)
  ) |> 
  plot_ly(
    labels = ~ modalidade,
    values = ~ qtd,
    type = 'pie',
    hole = 0.6,
    textinfo = "text+percent", #label+percent,
    hoverinfo = 'text+percent',
    text = ~ qtd,
    textposition = "auto",
    alpha = 0.7,
    marker = list(colors = cores,
                  line = list(color = '#FFFFFF', width = 1) #LINHA DE SEPARACAO DOS SETORES
              ),
    showlegend = TRUE
  )

p1_relativo <-  p1_relativo |> layout(
  #title = "Tempos médios / 2021",
  uniformtext=list(minsize=8, mode='hide'),
  font = list(family = "Calibri", color = "#294661", size = 14),
  #xaxis = list(title = ""),
  #yaxis = list(title = "Quantidade de Manifestações"),
  legend = list(orientation = "v")
)

# CONFIGURACAO DAS FORMAS DE DESENHO NO GRAFICO
p1_relativo <- config(p1_relativo,modeBarButtonsToAdd = list('drawline', 
                                 'drawopenpath', 
                                 'drawclosedpath', 
                                 'drawcircle', 
                                 'drawrect', 
                                 'eraseshape')) %>%layout(plot_bgcolor='#e5ecf6',
          xaxis = list(
            zerolinecolor = '#ffff',
            zerolinewidth = 2,
            gridcolor = 'ffff'),
          yaxis = list(
            zerolinecolor = '#ffff',
            zerolinewidth = 2,
            gridcolor = 'ffff')
          )
p1_relativo
```

 

### Indicadores Populacionais - Unidades Federativas {#sec-indicadores-populacionais-uf-ciclo12}

Após a análise abrangente em nível nacional, segue-se com a segmentação dos indicadores populacionais de cada unidade federativa.

A tabela a seguir lista os indicadores mantendo-se a metodologia utilizada na [subseção @sec-indicadores-populacionais-brasil-ciclo12], porém inclui-se a possibilidade de filtragem e visualização dos valores para cada unidade federativa.

 

```{r}
  

t1 <- 
  readRDS("../data/data_rds/rel02_populacao06.rds") |> 
  filter(ciclo == vetor_filtro_ciclo) |> 
  group_by(uf,modalidade,sexo) |> 
  summarise(
    qtd = sum(qtd,na.rm = TRUE)
  ) |> 
  pivot_wider(
    names_from = sexo,
    values_from = qtd
  ) |> 
  mutate(
    Total = Masculino + Feminino
  ) 
names(t1) <- c("Unidade Federativa","Modalidade","Feminino","Masculino","Total")



formattable::formattable(
    t1, 
    align = c("c","c","l","l","l"),
    list(
    #`Unidade Federativa` = color_tile("orange","blue"),
    `Modalidade` = color_tile("lightgrey","orange"),
    
    `Feminino` = color_tile("#F6FF98","#F6FF98"),
    `Masculino` =  color_tile("#F6FF98","#F6FF98"),
    `Total` = color_tile("lightblue","lightblue")
  )) |> 
 as.datatable(
    extensions = c('Buttons',"AutoFill","ColReorder"),
    escape = FALSE,
    rownames = FALSE,
    class='display', #'hover cell-border stripe',
    filter = "top",
    style = "default", #'auto', 'default', 'bootstrap', or 'bootstrap4'.
    options = list(
      dom='Blfrtip', #FUNCOES DO PAINEL-(https://datatables.net/reference/option/dom) 
      buttons = 
          list('copy', 'print', list(
          extend = 'collection',
          buttons = c('csv', 'excel', 'pdf'),
          text = 'Download'
        )),
      autoFill = TRUE,
      colReorder = TRUE,
      pageLength = 10, 
      lengthMenu = seq(10,max(nrow(t1))+10,10),
      pageLength = 10, 
      autoWidth = TRUE,
      initComplete = JS(
        "function(settings, json) {",
        "$('body').css({'font-family': 'Calibri'});",
        "}"
      ),
      language = list(
        info = 'Mostrando de _START_ para _END_ em um total de _TOTAL_ registros',
        paginate = list(previous = 'Anterior', `next` = 'Seguinte'),
        url = '//cdn.datatables.net/plug-ins/1.10.11/i18n/Portuguese-Brasil.json'
      )
  #pageLength = 5
    )
  )

  
```

 

A população prisional geral é apresentada graficamente na @fig-indicadores-populacionais_uf1-ciclo12, desta vez, dividida por estados da federação.

```{r}
#| label: fig-indicadores-populacionais_uf1-ciclo12
#| fig-cap: >  
#|       População prisional geral por unidade federativa em valores absolutos considerando:
#|       as pessoas custodiadas em unidades prisionais; e em prisão domiciliar monitoradas 
#|       eletronicamente ou não. 


p1 <-  
  readRDS("../data/data_rds/rel02_populacao06.rds") |> 
  filter(
    ciclo == vetor_filtro_ciclo,
    #modalidade == "Custódia em unidade prisional"
  ) |> 
  group_by(uf) |> 
  summarise(
    qtd = sum(qtd,na.rm = TRUE)
  ) |> 
  ungroup() |> 
  mutate(
    soma = sum(qtd,na.rm = TRUE),
    porc = round((qtd / soma)*100, digits = 2)
  ) |> 
  arrange(desc(qtd)) |>
  mutate(
    uf = factor(uf, levels = uf, ordered = TRUE) 
  ) |> 
  plot_ly(
    x = ~ uf,
    y = ~ qtd,
    type = 'bar',
    #color = cores,
    #colors =  cores,
    text = ~ str_c( `qtd`),
    textposition = "auto",
    textfont = list(family = "Calibri",size = 14),
    #hole = 0.6,
    textinfo = "text+percent", #"label+percent",
    #hoverinfo = 'text+percent',
    alpha = 0.8,
    marker = list(
      color = "#294661",
      line = list(
        color = '#FFFFFF', 
        width = 1.5
        ) #LINHA DE SEPARACAO DOS SETORES
      ),
    showlegend = TRUE
  )

p1 <- config(
  p1,
  modeBarButtonsToAdd = list(
                           'drawline', 
                           'drawopenpath', 
                           'drawclosedpath', 
                           'drawcircle', 
                           'drawrect', 
                           'eraseshape'
                       )
  )  |> 
  layout(
    plot_bgcolor='#FFFFFF',
    xaxis = list(
      title = "Unidades Federativas",
      showline = FALSE,
      showticklabels = TRUE,
      zerolinecolor = '#ffffff',
      zerolinewidth = 2,
      gridcolor = '#ffffff'
    ),
    yaxis = list(
      title = "População Prisional",
      showline = FALSE,
      showticklabels = FALSE,
      zerolinecolor = '#ffffff',
      zerolinewidth = 2,
      gridcolor = '#ffffff',
      range = c(0.0,max(p1$qtd)*1.2)
    ),
    barmode = "stack",  # OU "group" - EMPILHA AS COLUNAS
    #title = "Tempos médios / 2021",
    #uniformtext=list(minsize=10, mode='hide'),
    font = list(
      family = "Calibri", 
      color = "#294661", 
      size = 14
    ),
  legend = list(orientation = "h")
  )
  
p1

```

 

Utilizando a mesma metodologia, a @fig-indicadores-populacionais_uf2-ciclo12 repete-se o gráfico anterior (@fig-indicadores-populacionais_uf1-ciclo12), porém expondo as informações em valores relativos.

```{r}
#| label: fig-indicadores-populacionais_uf2-ciclo12
#| fig-cap: >  
#|       População prisional geral por unidade federativa em valores relativos considerando:
#|       as pessoas custodiadas em unidades prisionais; e em prisão domiciliar monitoradas 
#|       eletronicamente ou não. 


p1 <-  
  readRDS("../data/data_rds/rel02_populacao06.rds") |> 
  filter(
    ciclo == vetor_filtro_ciclo,
    #modalidade == "Custódia em unidade prisional"
  ) |> 
  group_by(uf) |> 
  summarise(
    qtd = sum(qtd,na.rm = TRUE)
  ) |> 
  ungroup() |> 
  mutate(
    soma = sum(qtd,na.rm = TRUE),
    porc = round((qtd / soma)*100, digits = 2)
  ) |> 
  arrange(desc(qtd)) |>
  mutate(
    uf = factor(uf, levels = uf, ordered = TRUE) 
  ) |> 
  plot_ly(
    x = ~ uf,
    y = ~ qtd,
    type = 'bar',
    #color = cores,
    #colors =  cores,
    text = ~ str_c( `porc`),
    textposition = "auto",
    textfont = list(family = "Calibri",size = 14),
    #hole = 0.6,
    textinfo = "text+percent", #"label+percent",
    #hoverinfo = 'text+percent',
    alpha = 0.8,
    marker = list(
      color = "#294661",
      line = list(
        color = '#FFFFFF', 
        width = 1.5
        ) #LINHA DE SEPARACAO DOS SETORES
      ),
    showlegend = TRUE
  )

p1 <- config(
  p1,
  modeBarButtonsToAdd = list(
                           'drawline', 
                           'drawopenpath', 
                           'drawclosedpath', 
                           'drawcircle', 
                           'drawrect', 
                           'eraseshape'
                       )
  )  |> 
  layout(
    plot_bgcolor='#FFFFFF',
    xaxis = list(
      title = "Unidades Federativas",
      showline = FALSE,
      showticklabels = TRUE,
      zerolinecolor = '#ffffff',
      zerolinewidth = 2,
      gridcolor = '#ffffff'
    ),
    yaxis = list(
      title = "População Prisional (%)",
      showline = FALSE,
      showticklabels = FALSE,
      zerolinecolor = '#ffffff',
      zerolinewidth = 2,
      gridcolor = '#ffffff',
      range = c(0.0,max(p1$qtd)*1.2)
    ),
    barmode = "stack",  # OU "group" - EMPILHA AS COLUNAS
    #title = "Tempos médios / 2021",
    #uniformtext=list(minsize=10, mode='hide'),
    font = list(
      family = "Calibri", 
      color = "#294661", 
      size = 14
    ),
  legend = list(orientation = "h")
  )
  
p1

```

 

O gráfico na @fig-indicadores-populacionais_uf3-ciclo12 desenha as proporções relativas ao sexo das pessoas privadas de liberdade, para cada unidade federativa, em comparação com o universo de pessoas cumprindo pena. Dessa forma, é possível verificar o aprisionamento de homens e mulheres separadamente em cada estado da federação e medir o seu impacto global em relação ao total de pessoas cumprindo penas restritivas de liberdade no Brasil em todas as modalidades de custódia.

```{r}
#| label: fig-indicadores-populacionais_uf3-ciclo12
#| fig-cap: >
#|       População por unidade federativa. A proporção considerando o
#|       sexo das pessoas presas está enfatizado em diferentes cores. Para melhor visualização, 
#|       o gráfico está em escala logarítmica.


p1 <-
  readRDS("../data/data_rds/rel02_populacao06.rds") |>
  filter(
    ciclo == vetor_filtro_ciclo,
    #modalidade == "Custódia em unidade prisional"
  ) |>
  group_by(uf,sexo) |>
  summarise(
    qtd = sum(qtd,na.rm = TRUE)
  ) |> 
  ungroup() |> 
  mutate(
    soma = sum(qtd,na.rm = TRUE),
    porc = round((qtd / soma)*100, digits = 2)
  ) |>
  arrange(desc(qtd)) |>
  plot_ly(
    x = ~ uf,
    y = ~ log10(qtd),
    type = 'bar',
    color = ~ sexo,
    colors =  c("#7F312F","#294661"),
    text = ~ str_c( `qtd`," / ",porc,"%"),
    textposition = "auto",
    textfont = list(family = "Calibri",size = 16),
    alpha = 0.6,
     marker = list(
      #color = "#294661",
      #colors = cores,
      line = list(
        color = '#FFFFFF',
        width = 1
        ) #LINHA DE SEPARACAO DOS SETORES
      ),
    showlegend = TRUE
  )

p1 <- config(
  p1,
  modeBarButtonsToAdd = list(
                           'drawline',
                           'drawopenpath',
                           'drawclosedpath',
                           'drawcircle',
                           'drawrect',
                           'eraseshape'
                       )
  )  |>
  layout(
    plot_bgcolor='#FFFFFF',
    xaxis = list(
      title = "Unidades Federativas",
      showline = FALSE,
      showticklabels = TRUE,
      zerolinecolor = '#ffffff',
      zerolinewidth = 2,
      gridcolor = 'ffff'
    ),
    yaxis = list(
      title = "Populaçao Prisional",
      showline = FALSE,
      showticklabels = FALSE,
      zerolinecolor = '#ffffff',
      zerolinewidth = 2,
      gridcolor = '#ffffff',
      range = c(0.0,max(p1$qtd)*1.2)
    ),
    barmode = "stack",  # OU "group" - EMPILHA AS COLUNAS
    #title = "Tempos médios / 2021",
    #uniformtext=list(minsize=10, mode='hide'),
    font = list(
      family = "Calibri",
      color = "#294661",
      size = 14
    ),
  legend = list(orientation = "h")
  )

p1

```

 

## Capacidade das Unidades Prisionais {#sec-capacidade-prisional-ciclo12}

A metodologia utilizada pelo Levantamento Nacional de Informações Penitenciárias - Infopen - para determinação da quantidade de vagas em cada estabelecimento prisional considera a autonomia das unidades federativas, nesse sentido, cada estado informa a quantidade de vagas de seus estabelecimentos prisionais baseado em critérios próprios de avaliação. Além disso, os equipamentos de monitoramento eletrônico adquiridos e/ou contratados não são considerados como vagas.

O indicadores de capacidade em âmbito nacional é estudado na [subseção @sec-indicadores-capacidade-ciclo12]. Nela são especificadas as vagas em unidades prisionais e contabilizada a quantidade de equipamentos de monitoramento eletrônico. Outro dado importante diz respeito a divisão da capacidade por gênero.

A [subseção @sec-indicadores-capacidade-uf-ciclo12] continua a análise da capacidade particularizando o estudo por estado da federação.

### Indicadores de Capacidade - Brasil {#sec-indicadores-capacidade-ciclo12}

A metodologia para contabilização das vagas no sistema inclui apenas o espaço físico em unidades prisionais, porém a pesquisa levanta o número de equipamentos de monitoramento eletrônico (tornozeleiras) disponíveis (contratados), conforme tabela abaixo.

 

```{r}
t1 <-  
  readRDS("../data/data_rds/rel01_capacidade01.rds") |> 
  filter(ciclo == vetor_filtro_ciclo) |> 
  group_by(modalidade,sexo) |> 
  summarise(
    qtd = sum(qtd,na.rm = TRUE)
  ) |> 
  pivot_wider(
    names_from = sexo,
    values_from = qtd
  ) |> 
  filter(Masculino > 0 && Feminino > 0) |> 
  mutate(
    Total = Masculino + Feminino
  ) |> 
  janitor::adorn_totals() |> 
  ungroup()
names(t1) <- c("Modalidade","Feminino","Masculino","Total")

formattable::formattable(
    t1, 
    align = c("c","l","l","l"),
    list(
    #`UF` = color_tile("lightgrey","orange"),
    `Modalidade` = color_tile("lightgrey","orange"),
    #`Âmbito` = color_tile("lightblue","lightyellow"),
    
    area(col = c(`Feminino`)) ~ normalize_bar("#F6FF98", 0.2),
    area(col = c(`Masculino`)) ~ normalize_bar("#F6FF98", 0.2),
    area(col = c(`Total`)) ~ normalize_bar("lightblue", 0.2)
  )) |> 
 as.datatable(
    extensions = 'Buttons',
    escape = FALSE,
    #caption = "Tabela: Taxas de ocupação por unidade federativa, tipo de estabelecimento e regime.",
    rownames = FALSE,
    class='hover cell-border stripe',
    filter = "top",
    style = "bootstrap4",
    options = list(
      dom='Bfrtip',
      buttons=c('copy', 'csv', 'excel', 'print', 'pdf'),
      autoFill = TRUE,
      colReorder = TRUE,
      pageLength = 27, 
      lengthMenu = seq(10,max(nrow(t2))+10,10),
      language = list(
        info = 'Mostrando de _START_ para _END_ em um total de _TOTAL_ registros',
        paginate = list(previous = 'Anterior', `next` = 'Seguinte'),
        url = '//cdn.datatables.net/plug-ins/1.10.11/i18n/Portuguese-Brasil.json'
      )
  #pageLength = 5
    )
  )
```

 

A próxima análise utiliza-se da @fig-indicadores-capacidade-brasil-ciclo12 para separar a capacidade das unidades penitenciárias por sexo, além de definir a proporção de vagas físicas em relação à quantidade de equipamentos de monitoramento eletrônico disponíveis para utilização.

```{r}
#| label: fig-indicadores-capacidade-brasil-ciclo12
#| fig-cap: >  
#|       O gráfico à esquerda traz os valores absolutos e relativos da capacidade em unidades de 
#|       custódia e a quantidade de equipamentos de monitoramento eletrônico contratados pelas
#|       unidades federativas, enquanto o desenho à direita explica a divisão das vagas em unidades
#|       prisionais estratificadas por sexo.
#| fig-subcap:
#|     - "Capacidade instalada em unidades prisionais e equipamento de monitoração eletrônica"
#|     - "Capacidade das unidades penitenciárias por sexo"
#| layout-ncol: 2

p1_relativo <- 
 readRDS("../data/data_rds/rel01_capacidade02.rds") |> 
  filter(
    ciclo == vetor_filtro_ciclo,
    modalidade !=  "Domiciliar não monitorado eletronicamente"
    ) |> 
  group_by(modalidade) |> 
  summarise(
    qtd = sum(qtd,na.rm = TRUE)
  ) |> 
  plot_ly(
    labels = ~ modalidade,
    values = ~ qtd,
    type = 'pie',
    hole = 0.6,
    textinfo = "text+percent", #label+percent,
    hoverinfo = 'text+percent',
    text = ~ qtd,
    textposition = "auto",
    alpha = 0.7,
    marker = list(colors = cores,
                  line = list(color = '#FFFFFF', width = 1) #LINHA DE SEPARACAO DOS SETORES
              ),
    showlegend = TRUE
  )

p1_relativo <-  p1_relativo |> layout(
  #title = "Tempos médios / 2021",
  uniformtext=list(minsize=8, mode='hide'),
  font = list(family = "Calibri", color = "#294661", size = 14),
  #xaxis = list(title = ""),
  #yaxis = list(title = "Quantidade de Manifestações"),
  legend = list(orientation = "h")
)

# CONFIGURACAO DAS FORMAS DE DESENHO NO GRAFICO
p1_relativo <- config(p1_relativo,modeBarButtonsToAdd = list('drawline', 
                                 'drawopenpath', 
                                 'drawclosedpath', 
                                 'drawcircle', 
                                 'drawrect', 
                                 'eraseshape')) %>%layout(plot_bgcolor='#e5ecf6',
          xaxis = list(
            zerolinecolor = '#ffff',
            zerolinewidth = 2,
            gridcolor = 'ffff'),
          yaxis = list(
            zerolinecolor = '#ffff',
            zerolinewidth = 2,
            gridcolor = 'ffff')
          )
p1_relativo


p2_relativo <- 
 readRDS("../data/data_rds/rel01_capacidade02.rds") |> 
  filter(
    ciclo == vetor_filtro_ciclo,
    modalidade ==  "Custódia em unidade prisional"
    ) |> 
  group_by(sexo) |> 
  summarise(
    qtd = sum(qtd,na.rm = TRUE)
  ) |> 
  plot_ly(
    labels = ~ sexo,
    values = ~ qtd,
    type = 'pie',
    hole = 0.6,
    textinfo = "text+percent", #label+percent,
    hoverinfo = 'text+percent',
    text = ~ qtd,
    textposition = "auto",
    alpha = 0.7,
    marker = list(colors = cores,
                  line = list(color = '#FFFFFF', width = 1) #LINHA DE SEPARACAO DOS SETORES
              ),
    showlegend = TRUE
  )

p2_relativo <-  p2_relativo |> layout(
  #title = "Tempos médios / 2021",
  uniformtext=list(minsize=8, mode='hide'),
  font = list(family = "Calibri", color = "#294661", size = 14),
  #xaxis = list(title = ""),
  #yaxis = list(title = "Quantidade de Manifestações"),
  legend = list(orientation = "h")
)

# CONFIGURACAO DAS FORMAS DE DESENHO NO GRAFICO
p2_relativo <- config(p2_relativo,modeBarButtonsToAdd = list('drawline', 
                                 'drawopenpath', 
                                 'drawclosedpath', 
                                 'drawcircle', 
                                 'drawrect', 
                                 'eraseshape')) %>%layout(plot_bgcolor='#e5ecf6',
          xaxis = list(
            zerolinecolor = '#ffff',
            zerolinewidth = 2,
            gridcolor = 'ffff'),
          yaxis = list(
            zerolinecolor = '#ffff',
            zerolinewidth = 2,
            gridcolor = 'ffff')
          )
p2_relativo
```

### Indicadores de Capacidade - Unidades Federativas {#sec-indicadores-capacidade-uf-ciclo12}

A @fig-indicadores-capacidade_uf1-ciclo12 ordena as unidades federativas de acordo com a quantidade de vagas físicas ofertadas em unidades prisionais administradas pelos seus respectivos sistemas penitenciários.

 

```{r}
#| label: fig-indicadores-capacidade_uf1-ciclo12
#| fig-cap: >  
#|       Capacidade prisional total por unidade federativa em valores absolutos
#|       considerando as vagas em unidades prisionais.


p1 <-  
  readRDS("../data/data_rds/rel01_capacidade02.rds") |> 
  filter(
    ciclo == vetor_filtro_ciclo,
    modalidade == "Custódia em unidade prisional"
  ) |> 
  group_by(uf) |> 
  summarise(
    qtd = sum(qtd,na.rm = TRUE)
  ) |> 
  ungroup() |> 
  mutate(
    soma = sum(qtd,na.rm = TRUE),
    porc = round((qtd / soma)*100, digits = 2)
  ) |> 
  arrange(desc(qtd)) |>
  mutate(
    uf = factor(uf, levels = uf, ordered = TRUE) 
  ) |> 
  plot_ly(
    x = ~ uf,
    y = ~ qtd,
    type = 'bar',
    #color = cores,
    #colors =  cores,
    text = ~ str_c( `qtd`),
    textposition = "auto",
    textfont = list(family = "Calibri",size = 14),
    #hole = 0.6,
    #textinfo = "text+percent", #label+percent,
    #hoverinfo = 'text+percent',
    alpha = 0.8,
    marker = list(
      color = "#294661",
      line = list(
        color = '#FFFFFF', 
        width = 1.5
        ) #LINHA DE SEPARACAO DOS SETORES
      ),
    showlegend = TRUE
  )

p1 <- config(
  p1,
  modeBarButtonsToAdd = list(
                           'drawline', 
                           'drawopenpath', 
                           'drawclosedpath', 
                           'drawcircle', 
                           'drawrect', 
                           'eraseshape'
                       )
  )  |> 
  layout(
    plot_bgcolor='#FFFFFF',
    xaxis = list(
      title = "Unidades Federativas",
      showline = FALSE,
      showticklabels = TRUE,
      zerolinecolor = '#ffffff',
      zerolinewidth = 2,
      gridcolor = '#ffffff'
    ),
    yaxis = list(
      title = "Capacidade (n° de vagas)",
      showline = FALSE,
      showticklabels = FALSE,
      zerolinecolor = '#ffffff',
      zerolinewidth = 2,
      gridcolor = '#ffffff',
      range = c(0.0,max(p1$qtd)*1.2)
    ),
    barmode = "stack",  # OU "group" - EMPILHA AS COLUNAS
    #title = "Tempos médios / 2021",
    #uniformtext=list(minsize=10, mode='hide'),
    font = list(
      family = "Calibri", 
      color = "#294661", 
      size = 14
    ),
  legend = list(orientation = "h")
  )
  
p1

```

 

O próximo gráfico (@fig-indicadores-capacidade_uf2-ciclo12) evidencia a proporção das vagas para cada estado da federação em relação ao quantitativo de vagas no país.

```{r}
#| label: fig-indicadores-capacidade_uf2-ciclo12
#| fig-cap: >  
#|       Capacidade prisional total por unidade federativa em valores relativos 
#|       considerando as vagas em unidades prisionais.


p1 <-  
  readRDS("../data/data_rds/rel01_capacidade02.rds") |> 
  filter(
    ciclo == vetor_filtro_ciclo,
    modalidade == "Custódia em unidade prisional"
  ) |> 
  group_by(uf) |> 
  summarise(
    qtd = sum(qtd,na.rm = TRUE)
  ) |> 
  ungroup() |> 
  mutate(
    soma = sum(qtd,na.rm = TRUE),
    porc = round((qtd / soma)*100, digits = 2)
  ) |> 
  arrange(desc(qtd)) |>
  mutate(
    uf = factor(uf, levels = uf, ordered = TRUE) 
  ) |> 
  plot_ly(
    x = ~ uf,
    y = ~ qtd,
    type = 'bar',
    #color = cores,
    #colors =  cores,
    text = ~ str_c(porc),
    textposition = "auto",
    textfont = list(family = "Calibri",size = 14),
    #hole = 0.6,
    #textinfo = "text+percent", #label+percent,
    #hoverinfo = 'text+percent',
    alpha = 0.8,
    marker = list(
      color = "#294661",
      line = list(
        color = '#FFFFFF', 
        width = 1.5
        ) #LINHA DE SEPARACAO DOS SETORES
      ),
    showlegend = TRUE
  )

p1 <- config(
  p1,
  modeBarButtonsToAdd = list(
                           'drawline', 
                           'drawopenpath', 
                           'drawclosedpath', 
                           'drawcircle', 
                           'drawrect', 
                           'eraseshape'
                       )
  )  |> 
  layout(
    plot_bgcolor='#FFFFFF',
    xaxis = list(
      title = "Unidades Federativas",
      showline = FALSE,
      showticklabels = TRUE,
      zerolinecolor = '#ffffff',
      zerolinewidth = 2,
      gridcolor = '#ffffff'
    ),
    yaxis = list(
      title = "Capacidade - n° de vagas (%)",
      showline = FALSE,
      showticklabels = FALSE,
      zerolinecolor = '#ffffff',
      zerolinewidth = 2,
      gridcolor = '#ffffff',
      range = c(0.0,max(p1$qtd)*1.2)
    ),
    barmode = "stack",  # OU "group" - EMPILHA AS COLUNAS
    #title = "Tempos médios / 2021",
    #uniformtext=list(minsize=10, mode='hide'),
    font = list(
      family = "Calibri", 
      color = "#294661", 
      size = 14
    ),
  legend = list(orientation = "h")
  )
  
p1

```

 

A descrição gráfica das proporções entre gêneros é elaborada no gráfico da @fig-indicadores-capacidade_uf3-ciclo12. Nela consta os valores percentuais e numéricos da quantidade de vagas para cada unidade federativa separadas por sexo. O denominador utilizado nos cálculos é a capacidade total dos estabelecimentos prisionais no país.

```{r}
#| label: fig-indicadores-capacidade_uf3-ciclo12
#| fig-cap: >
#|       Capacidade das unidades por unidade federativa. A proporção considerando o
#|       sexo das pessoas presas está enfatizado em diferentes cores. Para melhor visualização, 
#|       o gráfico está em escala logarítmica.


p1 <-
  readRDS("../data/data_rds/rel01_capacidade02.rds") |>
  filter(
    ciclo == vetor_filtro_ciclo,
    modalidade == "Custódia em unidade prisional"
  ) |>
  group_by(uf,sexo) |>
  summarise(
    qtd = sum(qtd,na.rm = TRUE)
  ) |> 
  ungroup() |> 
  mutate(
    soma = sum(qtd,na.rm = TRUE),
    porc = round((qtd / soma)*100, digits = 2)
  ) |>
  arrange(desc(qtd)) |>
  plot_ly(
    x = ~ uf,
    y = ~ log10(qtd),
    type = 'bar',
    color = ~ sexo,
    colors =  c("#7F312F","#294661"),
    text = ~ str_c( `qtd`," / ",porc,"%"),
    textposition = "auto",
    textfont = list(family = "Calibri",size = 16),
    alpha = 0.6,
     marker = list(
      #color = "#294661",
      #colors = cores,
      line = list(
        color = '#FFFFFF',
        width = 1
        ) #LINHA DE SEPARACAO DOS SETORES
      ),
    showlegend = TRUE
  )

p1 <- config(
  p1,
  modeBarButtonsToAdd = list(
                           'drawline',
                           'drawopenpath',
                           'drawclosedpath',
                           'drawcircle',
                           'drawrect',
                           'eraseshape'
                       )
  )  |>
  layout(
    plot_bgcolor='#FFFFFF',
    xaxis = list(
      title = "Unidades Federativas",
      showline = FALSE,
      showticklabels = TRUE,
      zerolinecolor = '#ffffff',
      zerolinewidth = 2,
      gridcolor = 'ffff'
    ),
    yaxis = list(
      title = "Capacidade",
      showline = FALSE,
      showticklabels = FALSE,
      zerolinecolor = '#ffffff',
      zerolinewidth = 2,
      gridcolor = '#ffffff',
      range = c(0.0,max(p1$qtd)*1.2)
    ),
    barmode = "stack",  # OU "group" - EMPILHA AS COLUNAS
    #title = "Tempos médios / 2021",
    #uniformtext=list(minsize=10, mode='hide'),
    font = list(
      family = "Calibri",
      color = "#294661",
      size = 14
    ),
  legend = list(orientation = "h")
  )

p1

```

## Ocupação {#sec-ocupacao-ciclo12}

Este tópico analisa a utilização do espaço dentro das unidades prisionais. Nesse sentido, são excluídas do cálculo da métrica de ocupação as pessoas monitoradas eletronicamente ou custodiadas em carceragens de delegacias e batalhões de polícia.

::: callout-note
*A exclusão das pessoas custodiadas em carceragens e batalhões de polícia do cálculo do índice de ocupação deve-se, entre outros motivos, à inexistência do conceito de "vaga" nesses estabelecimentos, dessa forma, inviabilizando a coleta e prejudicando a acurácia desses dados, especificamente.*
:::

As particularidades do sistema penitenciário brasileiro produz pluralidade de olhares para a forma de gerenciamento dos espaços dentro das unidades prisionais. Dentre elas, é imperativo considerar, dentro da metodologia de cálculo da taxa de ocupação, os regimes de custódia e seus respectivos tipos de unidades.

A lei n° 7.210, de 11 de julho de 1984 - lei de execução penal [@lep1984] - classifica os regimes de custódia em:

-   **Regime fechado:** Regime a ser cumprido em penitenciárias por pessoas condenadas ou presos provisórios;

-   **Regime semiaberto:** Regime cumprido em colônia agrícola, industrial ou similar;

-   **Regime aberto:** A casa do albergado destina-se ao cumprimento de pena privativa de liberdade, em regime aberto, da pena de limitação de fim de semana;

-   **Medida de segurança:** Apesar de não ser considerada um regime de custódia, a medida de segurança produz responsabilidade estatal e deve ser considerada para efeitos de direção de políticas públicas, nesse sentido, a LEP traz a necessidade de hospitais de custódia e tratamento psiquiátrico para o inimputáveis e semi-inimputáveis;

-   **Presos provisórios / sem condenação:** Novamente, a lei não conceitua um regime específico para as pessoas presas provisoriamente, porém destina as cadeias públicas e penitenciárias para seus resguardos.

Além dos regimes acima citados, a Lei de execução penal (LEP) trata dos **Centros de observação** onde serão realizados os exames gerais e criminológicos dos custodiados.

A matemática utilizada para resumo dos dados utiliza a seguinte equação:

$$
Taxa \ de \ ocupação  = \left(\dfrac{Número \ de \ pessoas \ privadas \ de \ liberdade}{Número \ de \ vagas}\right) \times 100
$$

O primeiro tópico dessa seção ([subseção @sec-ocupacao-brasil-ciclo12]) realiza a análise da ocupação e gera índices em nível nacional. Há preocupação em relatar a realidade de cada tipo de estabelecimento e regime de custódia.

A [subseção @sec-ocupacao-uf-ciclo12] seguintes amplia a análise com os índices divididos por estados.

### Taxa de Ocupação - Brasil {#sec-ocupacao-brasil-ciclo12}

```{r}
tx_geral <-  
  readRDS("../data/data_rds/rel03_ocupacao03.rds") |> 
  filter(ciclo == vetor_filtro_ciclo) |> 
  group_by(ciclo) |> 
  summarise(
    `Capacidade` = sum(`Capacidade`,na.rm = TRUE),
    `População` = sum(`População`,na.rm = TRUE),
    taxa_ocupacao = round((`População` / `Capacidade`)*100, digits = 2),
    vagas = `Capacidade` - `População`
  ) 
```

A taxa ocupação, em âmbito nacional e calculada sem separação de regimes de custódia e tipos de estabelecimento, estabelece-se em **`r str_c(tx_geral$taxa_ocupacao,"%")`**. Porém, a realidade do sistema penitenciário brasileiro impõe uma metodologia, para o cálculo mais realista da taxa de ocupação, baseada no tipo de estabelecimento prisional e no regime de cumprimento de pena, pois, apesar da legislação vigente exigir o cumprimento de pena em estabelecimentos prisionais específicos ([seção @sec-ocupacao-ciclo12]), pessoas em regimes diversos compartilham o mesmo espaço dentro das unidades penitenciárias.

Dessa forma, a metodologia considera a destinação do estabelecimento como critério básico de cálculo identificando unidades com pessoas custodiadas em diversos tipos de regimes. A tabela abaixo mostra a taxa de ocupação para cada tipo de destinação das unidades penitenciárias considerando os critérios legais relatados na [seção @sec-ocupacao-ciclo12].

 

```{r}
t1 <-  
  readRDS("../data/data_rds/rel03_ocupacao03.rds") |> 
  filter(ciclo == vetor_filtro_ciclo) |> 
  group_by(tipo_estabelecimento) |> 
  summarise(
    `Capacidade` = sum(`Capacidade`,na.rm = TRUE),
    `População` = sum(`População`,na.rm = TRUE),
    taxa_ocupacao = round((`População` / `Capacidade`)*100, digits = 2)
  ) |> 
  arrange(desc(taxa_ocupacao))
names(t1) <- c("Destinação do estabelecimento","Capacidade","População","Taxa de Ocupação")

formattable::formattable(
    t1, 
    align = c("l","r","r","c"),
    autoWidth = TRUE,
    caption = NULL ,
    list(
    `Destinação do estabelecimento` = color_tile("lightgrey","orange"),
    #`regime` = color_tile("lightgrey","orange"),
    #`Âmbito` = color_tile("lightblue","lightyellow"),
    
    area(col = c(`Capacidade`)) ~ normalize_bar("#F6FF98", 0.2),
    area(col = c(`População`)) ~ normalize_bar("#F6FF98", 0.2),
    `Taxa de Ocupação` = formatter("span", 
                                   style = `Taxa de Ocupação` ~ style(color = ifelse(`Taxa de Ocupação` >100, "red", "green")),
                                           `Taxa de Ocupação` ~ icontext(ifelse(`Taxa de Ocupação` > 100,"arrow-up", "arrow-down"), `Taxa de Ocupação`)
                                   )
  )) |> 
 as.datatable(
    extensions = 'Buttons',
    escape = FALSE,
    caption = "Tabela: Taxas de ocupação por unidade federativa, tipo de estabelecimento e regime.",
    rownames = FALSE,
    class='hover cell-border stripe',
    filter = "top",
    style = "bootstrap4",
    options = list(
      dom='Bfrtip',
      buttons=c('copy', 'csv', 'excel', 'print', 'pdf'),
      autoFill = TRUE,
      colReorder = TRUE,
      pageLength = 27, 
      lengthMenu = seq(10,max(nrow(t2))+10,10),
      pageLength = 27, 
      autoWidth = TRUE,
      initComplete = JS(
        "function(settings, json) {",
        "$('body').css({'font-family': 'Calibri'});",
        "}"
      ),
      language = list(
        info = 'Mostrando de _START_ para _END_ em um total de _TOTAL_ registros',
        paginate = list(previous = 'Anterior', `next` = 'Seguinte'),
        url = '//cdn.datatables.net/plug-ins/1.10.11/i18n/Portuguese-Brasil.json'
      )
  #pageLength = 5
    )
  )
```

 

### Taxa de Ocupação - Unidades Federativas {#sec-ocupacao-uf-ciclo12}

Mantendo a metodologia de cálculo da [subseção @sec-ocupacao-brasil-ciclo12], a tabela abaixo mostra a taxa de ocupação de cada unidade federativa considerando todos os regimes de custódia e tipos de estabelecimentos.

 

```{r}
t1 <-  
  readRDS("../data/data_rds/rel03_ocupacao03.rds") |> 
  filter(ciclo == vetor_filtro_ciclo) |> 
  group_by(uf) |> 
  summarise(
    `Capacidade` = sum(`Capacidade`,na.rm = TRUE),
    `População` = sum(`População`,na.rm = TRUE),
    taxa_ocupacao = round((`População` / `Capacidade`)*100, digits = 2)
  ) |> 
  arrange(desc(taxa_ocupacao))
names(t1) <- c("Unidade Federativa","Capacidade","População","Taxa de Ocupação")

formattable::formattable(
    t1, 
    align = c("l","c","c","c"),
    list(
    `Unidade Federativa` = color_tile("lightgrey","orange"),
    #`regime` = color_tile("lightgrey","orange"),
    #`Âmbito` = color_tile("lightblue","lightyellow"),
    
    area(col = c(`Capacidade`)) ~ normalize_bar("#F6FF98", 0.2),
    area(col = c(`População`)) ~ normalize_bar("#F6FF98", 0.2),
    area(col = c(`Taxa de Ocupação`)) ~ normalize_bar("lightblue", 0.2)
    
  )) |> 
  as.datatable(
    extensions = 'Buttons',
    escape = FALSE,
    #caption = "Tabela: Taxas de ocupação por unidade federativa, tipo de estabelecimento e regime.",
    rownames = FALSE,
    class='hover cell-border stripe',
    filter = "top",
    style = "bootstrap4",
    options = list(
     dom='Bfrtip',
      buttons=c('copy', 'csv', 'excel', 'print', 'pdf'),
      autoFill = TRUE,
      colReorder = TRUE,
      pageLength = 27, 
      lengthMenu = seq(10,max(nrow(t2))+10,10),
      pageLength = 27, 
      autoWidth = TRUE,
      initComplete = JS(
        "function(settings, json) {",
        "$('body').css({'font-family': 'Calibri'});",
        "}"
      ),
      language = list(
        info = 'Mostrando de _START_ para _END_ em um total de _TOTAL_ registros',
        paginate = list(previous = 'Anterior', `next` = 'Seguinte'),
        url = '//cdn.datatables.net/plug-ins/1.10.11/i18n/Portuguese-Brasil.json'
      )
  #pageLength = 5
    )
  )
```

 

A @fig-ocupacao-brasil-ciclo12 evidencia graficamente as maiores taxas de ocupação em âmbito nacional.

```{r}
#| label: fig-ocupacao-brasil-ciclo12
#| fig-cap: >  
#|       Taxa de ocupação por estado da federação.

p1 <- 
  readRDS("../data/data_rds/rel03_ocupacao03.rds") |> 
  filter(ciclo == vetor_filtro_ciclo) |> 
  group_by(uf) |> 
  summarise(
    `Capacidade` = sum(`Capacidade`,na.rm = TRUE),
    `População` = sum(`População`,na.rm = TRUE),
     taxa_ocupacao = round((`População` / `Capacidade`)*100, digits = 2)
  ) |> 
  arrange(desc(taxa_ocupacao)) |>
  mutate(
    uf = factor(uf, levels = uf, ordered = TRUE)
  )

p1 <- p1 |>
  plot_ly(
    x = ~ uf,
    y = ~ `taxa_ocupacao`,
    name = "taxa_ocupacao",
    type = 'bar',
    text = ~ `taxa_ocupacao`,
    textposition = "auto",
    alpha = 0.7,
    marker = list(color = "#294661")
  )

p1 <- p1 |> layout(
  dragmode='drawopenpath', # INCLUI A FERRAMENTA PARA DESENHO
  newshape=list(line = list(color='cyan', opacity = 0.5 )), 
  #title = "Tempos médios / 2021",
  uniformtext=list(minsize=8, mode='hide'),
  font = list(family = "Calibri", color = "#294661", size = 14.5),
  xaxis = list(title = ""),
  yaxis = list(title = "Taxa de ocupação"),
  legend = list(orientation = "v")
)

# CONFIGURACAO DAS FORMAS DE DESENHO NO GRAFICO
p1 <- config(
  p1,
  modeBarButtonsToAdd = list(
                           'drawline', 
                           'drawopenpath', 
                           'drawclosedpath', 
                           'drawcircle', 
                           'drawrect', 
                           'eraseshape'
                       )
  )  |> 
  layout(plot_bgcolor='#FFFFFF',
          xaxis = list(
            zerolinecolor = '#ffff',
            zerolinewidth = 2,
            gridcolor = 'ffff'),
          yaxis = list(
            zerolinecolor = '#ffff',
            zerolinewidth = 2,
            gridcolor = 'ffff')
          )

p1

```

O próximo quadro aprofunda a análise anterior segregando a taxa de ocupação entre os diversos tipos de estabelecimentos com seus respectivos tipos de regime. Dessa maneira, observa-se o comportamento do referido índice para cada forma de custódia. Essa divisão entre tipos de estabelecimento e regime de custódia evidencia valores extremos para a taxa de ocupação.

 

```{r}
t1 <-  
  readRDS("../data/data_rds/rel03_ocupacao03.rds") |> 
  filter(
    ciclo == vetor_filtro_ciclo,
    #!tipo_estabelecimento %in% c("Aberto","Semiaberto")
    ) |> 
  group_by(uf,tipo_estabelecimento) |> 
  summarise(
    `Capacidade` = sum(`Capacidade`,na.rm = TRUE),
    `População` = sum(`População`,na.rm = TRUE),
    taxa_ocupacao = round((`População` / `Capacidade`)*100, digits = 2)
  ) |>
  select(
    uf,tipo_estabelecimento,taxa_ocupacao
  ) |> 
  pivot_wider(
    names_from = tipo_estabelecimento,
    values_from = taxa_ocupacao
  ) |> 
  mutate(
    `Diversos tipos de regime` = str_replace_na(`Diversos tipos de regime`, replacement = "0"),
    `Fechado / provisórios` = str_replace_na(`Fechado / provisórios`, replacement = "0"),
    `Semiaberto` = str_replace_na(`Semiaberto`, replacement = "0"),
    `Medida De Segurança` = str_replace_na(`Medida De Segurança`, replacement = "0"),
    `Aberto` = str_replace_na(`Aberto`, replacement = "0"),
    `Realização de exames gerais e criminológicos` = str_replace_na(`Realização de exames gerais e criminológicos`, replacement = "0"),
    
  )
 
names(t1) <- c("Unidade Federativa","Diversos tipos de regime","Fechado / provisórios",
               "Semiaberto","Medida de segurança","Aberto",
               "Realização de exames gerais e criminológicos"
              )

formattable::formattable(
    t1, 
    align = c("l","c","c","c","c","c","c"),
    list(
      `Diversos tipos de regime`= color_tile("lightgrey","orange"),
      `Fechado / provisórios`= color_tile("lightgrey","orange"),
      `Semiaberto`= color_tile("lightgrey","orange"),
      `Aberto`= color_tile("lightgrey","orange"),
      `Realização de exames gerais e criminológicos`= color_tile("lightgrey","orange"),
      `Medida de segurança`= color_tile("lightgrey","orange")
  )) |> 
  as.datatable(
    extensions = 'Buttons',
    escape = FALSE,
    #caption = "Tabela: Taxas de ocupação por unidade federativa, tipo de estabelecimento e regime.",
    rownames = FALSE,
    class='hover cell-border stripe',
    filter = "top",
    style = "bootstrap4",
    options = list(
      dom='Bfrtip',
      buttons=c('copy', 'csv', 'excel', 'print', 'pdf'),
      pageLength = 27, 
      autoWidth = TRUE,
      initComplete = JS(
        "function(settings, json) {",
        "$('body').css({'font-family': 'Calibri'});",
        "}"
      ),
      language = list(
        info = 'Mostrando de _START_ para _END_ em um total de _TOTAL_ registros',
        paginate = list(previous = 'Anterior', `next` = 'Seguinte'),
        url = '//cdn.datatables.net/plug-ins/1.10.11/i18n/Portuguese-Brasil.json'
      )
  #pageLength = 5
    )
  )
```

## Déficit / Superávit de Vagas {#sec-vagas-ciclo12}

Esta seção complementa as análises do tópico anterior (@sec-ocupacao-ciclo12) evidenciando a diferença entre a quantidade de pessoas privadas de liberdade e as vagas disponíveis no sistema prisional. A taxa de ocupação, estudada no tópico anterior, resume a utilização do espaço físico nas unidades prisionais em números relativos, porém não evidencia os valores absolutos da relação entre capacidade e população prisionais, consequentemente, dificulta a mensuração do impacto da superpopulação prisional no sistema penitenciário de maneira específica, como por exemplo, indicação de volume financeiro para investimentos.

Nesse sentido, os índices calculados nesta seção subsidiam o estudo da ocupação das unidades penitenciárias sob uma perspectiva quantitativa em valores absolutos.

A metodologia apresenta-se similar à apresentada anteriormente para a taxa de ocupação com, apenas uma diferença, sendo contabilizadas às pessoas custodiadas em carceragens de delegacias ou batalhões de polícia. Nesse sentido, excluem-se do cálculo apenas as pessoas em prisão domiciliar.

Matematicamente, o indicador é determinado pela subtração do número de pessoas em privação de liberdade e a quantidade de vagas, conforme equação a seguir.

$$
Índice \ de \ vagas  = Quantidade \ de \ vagas \ - Número \ de \ pessoas \ presas
$$

Em suma, para valores negativos do índice supramencionado, tem-se déficit de vagas, enquanto para valores positivos, há capacidade sobressalente.

A primeira parte deste tópico ([subseção @sec-vagas-brasil-ciclo12]) trata da taxas supracitadas em âmbito nacional calculadas sobre o somatório das populações prisionais estaduais. Dessa forma, retrata a realidade ampla do sistema penitenciário nacional.

Em um segundo momento, trata-se das taxas de aprisionamento e penalização mais profundamente em âmbito estadual [subseção @sec-vagas-uf-ciclo12]. O intuito é conhecer as realidades internas às unidades federativas e compará-las.

### Déficit / Superávit de Vagas - Brasil {#sec-vagas-brasil-ciclo12}

O déficit total de vagas no Brasil encontra-se em **`r format(tx_geral$vagas, decimal.mark = ",", big.mark=".")`**. Esse total é formado pelo déficit de vagas nos diversos tipos de estabelecimentos e regimes de custódia, nesse sentido, é importante prover o índice de acordo com as características e particularidades do espaço físico necessário à custódia.

::: callout-note
*Com relação à pessoas privadas de liberdade em carceragens de delegacias ou batalhões de polícia, as mesmas foram incluídas no cálculo deste índice no rol de custodiados sem condenação (provisórios).*
:::

A tabela abaixo lista os indicadores de déficit / superávit de acordo com o regime de destinação do estabelecimento penitenciário.

 

```{r}
t1 <-  
  readRDS("../data/data_rds/rel08_vagas02.rds") |> 
  filter(
    ciclo == vetor_filtro_ciclo,
    modalidade %in% c("Custódia em unidade prisional","Custódia em carceragens ou batalhões")
    ) |> 
  group_by(tipo_estabelecimento) |> 
  summarise(
    Capacidade = sum(Capacidade,na.rm = TRUE),
    `População` = sum(`População`, na.rm = TRUE),
    vagas = sum(vagas, na.rm = TRUE)
  ) |> 
  filter(vagas != 0) |> 
  arrange(desc(vagas))
names(t1) <- c("Destinação do estabelecimento","Capacidade","População","Índice de vagas")

formattable::formattable(
    t1, 
    align = c("l","r","c","c"),
    autoWidth = TRUE,
    caption = NULL ,
    list(
    `Destinação do estabelecimento` = color_tile("lightgrey","orange"),
    #`Modalidade` = color_tile("lightgrey","orange"),
    #`regime` = color_tile("lightgrey","orange"),
    #`Âmbito` = color_tile("lightblue","lightyellow"),
    
    area(col = c(`Capacidade`)) ~ normalize_bar("#F6FF98", 0.2),
    area(col = c(`População`)) ~ normalize_bar("#F6FF98", 0.2),
    `Índice de vagas` = formatter("span", 
                                   style = `Índice de vagas` ~ style(color = ifelse(`Índice de vagas` < 0, "red", "green")),
                                           `Índice de vagas` ~ icontext(ifelse(`Índice de vagas` < 0,"arrow-up", "arrow-down"), `Índice de vagas`)
                                   )
  )) |> 
 as.datatable(
    extensions = 'Buttons',
    escape = FALSE,
    #caption = "Tabela: Taxas de ocupação por unidade federativa, tipo de estabelecimento e regime.",
    rownames = FALSE,
    class='hover cell-border stripe',
    filter = "top",
    style = "bootstrap4",
    options = list(
      dom='Bfrtip',
      buttons=c('copy', 'csv', 'excel', 'print', 'pdf'),
      autoFill = TRUE,
      colReorder = TRUE,
      pageLength = 27, 
      lengthMenu = seq(10,max(nrow(t2))+10,10),
      pageLength = 27, 
      autoWidth = TRUE,
      initComplete = JS(
        "function(settings, json) {",
        "$('body').css({'font-family': 'Calibri'});",
        "}"
      ),
      language = list(
        info = 'Mostrando de _START_ para _END_ em um total de _TOTAL_ registros',
        paginate = list(previous = 'Anterior', `next` = 'Seguinte'),
        url = '//cdn.datatables.net/plug-ins/1.10.11/i18n/Portuguese-Brasil.json'
      )
    )
  )
```

 

O gráfico na @fig-vagas-brasil-ciclo12 apresenta os valores graficamente. Dessa forma, possibilita-se a comparação dos valores considerando suas respectivas proporções.

```{r}
#| label: fig-vagas-brasil-ciclo12
#| fig-cap: >  
#|       Comparação entre capacidade das unidades penitenciárias, população prisional e índice
#|       de vagas do sistema prisional.

p1 <- 
 readRDS("../data/data_rds/rel08_vagas02.rds") |> 
  filter(
    ciclo == vetor_filtro_ciclo,
    modalidade %in% c("Custódia em unidade prisional","Custódia em carceragens ou batalhões")
    ) |> 
  group_by(tipo_estabelecimento) |> 
  summarise(
    Capacidade = sum(Capacidade,na.rm = TRUE),
    `População` = sum(`População`, na.rm = TRUE),
    vagas = sum(vagas, na.rm = TRUE)
  ) |> 
  filter(vagas != 0) |> 
  arrange(desc(vagas))
names(p1) <- c("Destinação do estabelecimento","Capacidade","População","Índice de vagas")

p1 <- p1 |>
  plot_ly(
    x = ~ `Destinação do estabelecimento`,
    y = ~ Capacidade,
    name = "Capacidade",
    type = 'bar',
    text = ~ Capacidade,
    textposition = "auto",
    alpha = 0.7,
    marker = list(color = "#294661")
  )

p1 <- p1 |>
  add_trace(
    y = ~ `População`,
    name = "População",
    type = 'bar',
    text = ~ `População`,
    textposition = "auto",
    alpha = 0.7,
    marker = list(color = "#7F312F")
  )

p1 <- p1 |>
  add_trace(
    y = ~ `Índice de vagas`,
    name = "Índice de vagas",
    type = 'bar',
    text = ~ `Índice de vagas`,
    textposition = "auto",
    alpha = 0.7,
    marker = list(color = "#808080")
  )

p1 <- p1 |> layout(
  dragmode='drawopenpath', # INCLUI A FERRAMENTA PARA DESENHO
  newshape=list(line = list(color='cyan', opacity = 0.5 )), 
  #title = "Tempos médios / 2021",
  uniformtext=list(minsize=8, mode='hide'),
  font = list(family = "Calibri", color = "#294661", size = 14.5),
  xaxis = list(title = ""),
  yaxis = list(title = "Quantidade"),
  legend = list(orientation = "v")
)

# CONFIGURACAO DAS FORMAS DE DESENHO NO GRAFICO
p1 <- config(
  p1,
  modeBarButtonsToAdd = list(
                           'drawline', 
                           'drawopenpath', 
                           'drawclosedpath', 
                           'drawcircle', 
                           'drawrect', 
                           'eraseshape'
                       )
  )  |> 
  layout(plot_bgcolor='#FFFFFF',
          xaxis = list(
            zerolinecolor = '#ffff',
            zerolinewidth = 2,
            gridcolor = 'ffff'),
          yaxis = list(
            zerolinecolor = '#ffff',
            zerolinewidth = 2,
            gridcolor = 'ffff')
          )

p1

```

### Déficit / Superávit de Vagas - Unidades Federativas {#sec-vagas-uf-ciclo12}

A análise deste tópico continua com a disposição das informações segregadas por unidade federativa. A tabela abaixo traz os indicadores de capacidade e população prisional, além disso, mostra o índices de déficit / superávit de vagas do sistema.

 

```{r}
t1 <-  
  readRDS("../data/data_rds/rel08_vagas02.rds") |> 
  filter(
    ciclo == vetor_filtro_ciclo,
    modalidade %in% c("Custódia em unidade prisional","Custódia em carceragens ou batalhões")
    ) |> 
  group_by(uf) |> 
  summarise(
    Capacidade = sum(Capacidade,na.rm = TRUE),
    `População` = sum(`População`, na.rm = TRUE),
    vagas = sum(vagas, na.rm = TRUE)
  ) |> 
  filter(vagas != 0) |> 
  arrange(desc(vagas))
names(t1) <- c("Unidade federativa","Capacidade","População","Índice de vagas")

formattable::formattable(
    t1, 
    align = c("l","r","c","c"),
    autoWidth = TRUE,
    caption = NULL ,
    list(
    `Unidade federativa` = color_tile("lightgrey","orange"),
    #`Modalidade` = color_tile("lightgrey","orange"),
    #`regime` = color_tile("lightgrey","orange"),
    #`Âmbito` = color_tile("lightblue","lightyellow"),
    
    area(col = c(`Capacidade`)) ~ normalize_bar("#F6FF98", 0.2),
    area(col = c(`População`)) ~ normalize_bar("#F6FF98", 0.2),
    `Índice de vagas` = formatter("span", 
                                   style = `Índice de vagas` ~ style(color = ifelse(`Índice de vagas` < 0, "red", "green")),
                                           `Índice de vagas` ~ icontext(ifelse(`Índice de vagas` < 0,"arrow-up", "arrow-down"), `Índice de vagas`)
                                   )
  )) |> 
 as.datatable(
    extensions = 'Buttons',
    escape = FALSE,
    #caption = "Tabela: Taxas de ocupação por unidade federativa, tipo de estabelecimento e regime.",
    rownames = FALSE,
    class='hover cell-border stripe',
    filter = "top",
    style = "bootstrap4",
    options = list(
      dom='Bfrtip',
      buttons=c('copy', 'csv', 'excel', 'print', 'pdf'),
      autoFill = TRUE,
      colReorder = TRUE,
      pageLength = 27, 
      lengthMenu = seq(10,max(nrow(t2))+10,10),
      pageLength = 27, 
      autoWidth = TRUE,
      initComplete = JS(
        "function(settings, json) {",
        "$('body').css({'font-family': 'Calibri'});",
        "}"
      ),
      language = list(
        info = 'Mostrando de _START_ para _END_ em um total de _TOTAL_ registros',
        paginate = list(previous = 'Anterior', `next` = 'Seguinte'),
        url = '//cdn.datatables.net/plug-ins/1.10.11/i18n/Portuguese-Brasil.json'
      )
    )
  )
```

 

A próxima tabela estende a análise, desta vez, com a inclusão dos índices de déficit / superávit de vagas por unidade federativa e regime de destinação dos estabelecimentos prisionais.

 

```{r}
t1 <-  
  readRDS("../data/data_rds/rel08_vagas02.rds") |> 
  filter(
    ciclo == vetor_filtro_ciclo,
     modalidade %in% c("Custódia em unidade prisional","Custódia em carceragens ou batalhões")
    ) |> 
  group_by(uf,tipo_estabelecimento) |> 
  summarise(
    `Capacidade` = sum(`Capacidade`,na.rm = TRUE),
    `População` = sum(`População`,na.rm = TRUE),
    vagas = sum(vagas, na.rm = TRUE)
  ) |>
  select(
    uf,tipo_estabelecimento,vagas
  ) |> 
  pivot_wider(
    names_from = tipo_estabelecimento,
    values_from = vagas
  ) |> 
  mutate(
    `Diversos tipos de regime` = str_replace_na(`Diversos tipos de regime`, replacement = "0"),
    `Fechado / provisórios` = str_replace_na(`Fechado / provisórios`, replacement = "0"),
    `Semiaberto` = str_replace_na(`Semiaberto`, replacement = "0"),
    `Medida De Segurança` = str_replace_na(`Medida De Segurança`, replacement = "0"),
    `Aberto` = str_replace_na(`Aberto`, replacement = "0"),
    `Realização de exames gerais e criminológicos` = str_replace_na(`Realização de exames gerais e criminológicos`, replacement = "0"),
    
  ) 
 
names(t1) <- c("Unidade Federativa","Diversos tipos de regime","Fechado / provisórios",
               "Semiaberto","Medida de segurança","Aberto",
               "Realização de exames gerais e criminológicos"
              )

formattable::formattable(
    t1, 
    align = c("l","c","c","c","c","c","c"),
    list(
      `Diversos tipos de regime`= color_tile("lightgrey","orange"),
      `Fechado / provisórios`= color_tile("lightgrey","orange"),
      `Semiaberto`= color_tile("lightgrey","orange"),
      `Aberto`= color_tile("lightgrey","orange"),
      `Realização de exames gerais e criminológicos`= color_tile("lightgrey","orange"),
      `Medida de segurança`= color_tile("lightgrey","orange")
  )) |> 
  as.datatable(
    extensions = 'Buttons',
    escape = FALSE,
    #caption = "Tabela: Taxas de ocupação por unidade federativa, tipo de estabelecimento e regime.",
    rownames = FALSE,
    class='hover cell-border stripe',
    filter = "top",
    style = "bootstrap4",
    options = list(
      dom='Bfrtip',
      buttons=c('copy', 'csv', 'excel', 'print', 'pdf'),
      pageLength = 27, 
      autoWidth = TRUE,
      initComplete = JS(
        "function(settings, json) {",
        "$('body').css({'font-family': 'Calibri'});",
        "}"
      ),
      language = list(
        info = 'Mostrando de _START_ para _END_ em um total de _TOTAL_ registros',
        paginate = list(previous = 'Anterior', `next` = 'Seguinte'),
        url = '//cdn.datatables.net/plug-ins/1.10.11/i18n/Portuguese-Brasil.json'
      )
  #pageLength = 5
    )
  )
```

 

O gráfico na @fig-vagas-ufs-ciclo12 mostra o total do índices de déficit / superávit de vagas por unidade federativa levando em consideração as proporções entre estados.

```{r}
#| label: fig-vagas-ufs-ciclo12
#| fig-cap: >  
#|       Déficit / superávit de vagas por estado da federação.

p1 <- 
 readRDS("../data/data_rds/rel08_vagas02.rds") |> 
  filter(
    ciclo == vetor_filtro_ciclo,
    modalidade %in% c("Custódia em unidade prisional","Custódia em carceragens ou batalhões")
    ) |> 
  group_by(uf) |> 
  summarise(
    Capacidade = sum(Capacidade,na.rm = TRUE),
    `População` = sum(`População`, na.rm = TRUE),
    vagas = sum(vagas, na.rm = TRUE)
  ) |> 
  filter(vagas != 0) |> 
  arrange(desc(vagas)) |> 
  mutate(
    uf = factor(uf, levels = uf, ordered = TRUE)
  )

p1 <- p1 |>
  plot_ly(
    x = ~ uf,
    y = ~ `vagas`,
    name = "Deficit / Superávit de vagas",
    type = 'bar',
    text = ~ `vagas`,
    textposition = "auto",
    alpha = 0.7,
    marker = list(color = "#294661")
  )

p1 <- p1 |> layout(
  dragmode='drawopenpath', # INCLUI A FERRAMENTA PARA DESENHO
  newshape=list(line = list(color='cyan', opacity = 0.5 )), 
  #title = "Tempos médios / 2021",
  uniformtext=list(minsize=8, mode='hide'),
  font = list(family = "Calibri", color = "#294661", size = 14.5),
  xaxis = list(title = ""),
  yaxis = list(title = "Quantidade"),
  legend = list(orientation = "v")
)

# CONFIGURACAO DAS FORMAS DE DESENHO NO GRAFICO
p1 <- config(
  p1,
  modeBarButtonsToAdd = list(
                           'drawline', 
                           'drawopenpath', 
                           'drawclosedpath', 
                           'drawcircle', 
                           'drawrect', 
                           'eraseshape'
                       )
  )  |> 
  layout(plot_bgcolor='#FFFFFF',
          xaxis = list(
            zerolinecolor = '#ffff',
            zerolinewidth = 2,
            gridcolor = 'ffff'),
          yaxis = list(
            zerolinecolor = '#ffff',
            zerolinewidth = 2,
            gridcolor = 'ffff')
          )

p1

```

## Aprisionamento e Penalização {#sec-aprisionamento-ciclo12}

Esta seção trata das métricas que relacionam a quantidade de pessoas cumprindo algum tipo de pena e o total de habitantes do país, região ou estado da federação. Nesse sentido, calcula-se dois índices:

**Taxa de aprisionamento:** Dada pela relação entre a **quantidade pessoas privadas de liberdade**[^estatisticas_ciclo12-1] cumprindo pena em estabelecimentos prisionais e a quantidade de habitantes no país, região ou estado para cada 100.000 habitantes.

[^estatisticas_ciclo12-1]: Quantitativo de pessoas cumprindo penas nas modalidades de custódia em estabelecimentos prisionais, carceragens e batalhões de polícia. Dessa maneira, exclui-se dessa variável as pessoas em prisão domiciliar.

$$
Taxa \ de \ aprisionamento  = \left(\dfrac{Número \ de \ pessoas \ privadas \ de \ liberdade}{Quantidade \ de \ habitantes}\right) \times 100.000
$$

**Taxa de penalização:** Dada pela relação entre a **população prisional geral** [^estatisticas_ciclo12-2] e a quantidade de habitantes no país, região ou estado para cada 100.000 habitantes.

[^estatisticas_ciclo12-2]: A **população prisional geral** é formada por pessoas cumprindo pena em todas as modalidades de custódia, sendo custodiados em: estabelecimentos prisionais, carceragens e batalhões de polícia, prisão domiciliar e prisão domiciliar com monitoramento eletrônico.

$$
Taxa \ de \ penalização  = \left(\dfrac{População \ prisional \ geral}{Quantidade \ de \ habitantes}\right) \times 100.000
$$

Dessa forma, a metodologia de cálculo da **taxa de aprisionamento** considera apenas as pessoas privadas de liberdade cumprindo penas em estabelecimentos prisionais, enquanto a **taxa de penalização** considera o universo de pessoas cumprindo penas em unidades penitenciárias, carceragens, batalhões de polícia ou prisão domiciliar.

Portanto, a comparação entre os dois índices supracitados fornece infomações sobre o impacto da prisão domiciliar e monitoramento eletrônico sobre a ocupação do Sistema Penitenciário Nacional.

::: callout-note
*As informações sobre a quantidade de habitantes em território nacional podem ser consultadas utilizando o Sistema IBGE de Recuperação Automática* *(SIDRA) do Instituto Brasileiro de Geografia e Estatística - IBGE - através do endereço http://sidra.ibge.gov.br/*
:::

A [subseção @sec-aprisionamento-brasil-ciclo12] calcula as taxas de aprisionamento e penalização considerando todos os custodiados no país, além disso, compara-se as taxas entre gêneros.

A segmentação das taxas entre os estados brasileiros acontece na [subseção @sec-aprisionamento-uf-ciclo12]. Essa análise viabiliza a comparação entre a quantidade de habitantes e a população prisional para cada unidade federativa e, dessa forma, garante o método de comparação entre os entes federativos.

```{r}
apris_brasil <- 
  readRDS("../data/data_rds/rel07_taxas02.rds") |> 
  filter(ciclo == vetor_filtro_ciclo) |> 
  group_by(uf) |> 
  summarise(
    tx_apris_brasil = round((sum(pop_prisional_fisica) / sum(pop_ibge))*100000, digits = 2),
    tx_penal_brasil = round((sum(pop_prisional_total) / sum(pop_ibge))*100000, digits = 2),
    tx_abs_brasil = sum(pop_prisional_total) - sum(pop_prisional_fisica),
    tx_relacao_pop = round(tx_penal_brasil / tx_apris_brasil, digits = 2),
    tx_porc_relacao_pop = (tx_relacao_pop-1)*100
  )

rel_generos <- 
  readRDS("../data/data_rds/rel07_taxas02.rds") |> 
  filter(ciclo == vetor_filtro_ciclo) |> 
  ungroup() |> 
  select(
     sexo,
     tx_aprisionamento,
     tx_penalizacao
   ) |> 
  pivot_wider(
    names_from = "sexo",
    values_from = c("tx_aprisionamento","tx_penalizacao")
  ) |> 
  mutate(
    rel_aprisionamento = round(tx_aprisionamento_Masculino / tx_aprisionamento_Feminino, digits = 2),
    rel_penalizacao = round(tx_penalizacao_Masculino / tx_penalizacao_Feminino, digits = 2 )
  )
  
  

```

### Taxas de Aprisionamento e Penalização - Brasil {#sec-aprisionamento-brasil-ciclo12}

Em âmbito nacional, tem-se **`r format(apris_brasil$tx_apris_brasil,big.mark = ".", decimal.mark = ",")`** e **`r format(apris_brasil$tx_penal_brasil, big.mark = ".", decimal.mark = ",")`** para os valores das taxas de aprisionamento e penalização, respectivamente. A razão entre as mesmas resulta em **`r format(apris_brasil$tx_relacao_pop, big.mark = ".", decimal.mark = ",")`**, nesse sentido, tem-se que a taxa de penalização supera a taxa de aprisionamento em cerca de **`r str_c(format(apris_brasil$tx_porc_relacao_pop,big.mark = ".", decimal.mark = ","),"%")`**.

O quadro abaixo mostra as taxas e populações mitigadas por gênero. A intenção é evidenciar a diferença de valores dos índices (taxas) e indicadores (populações) entre os sexos. Verifica-se grande diferença nos índices entre os gêneros, nesse caso, ainda majorada pela maior quantidade de habitantes do sexo feminino. Com relação ao aprisionamento, a taxa masculina excede em **`r format(rel_generos$rel_aprisionamento, big.mark = ".", decimal.mark = ",")`** vezes a taxa feminina, já a taxa de penalização resulta em uma relação **`r format(rel_generos$rel_penalizacao, big.mark = ".", decimal.mark = ",")`** vezes maior de homens penalizados em relação às mulheres.

 

```{r}
t1 <-  
  readRDS("../data/data_rds/rel07_taxas02.rds") |> 
  filter(ciclo == vetor_filtro_ciclo) |> 
  ungroup() |> 
  select(
    Sexo = sexo,
    `Taxa de aprisionamento` = tx_aprisionamento,
    `Pop. em estabelecimentos` = pop_prisional_fisica,
    `Taxa de penalização` = tx_penalizacao,
    `Pop. prisional geral` = pop_prisional_total,
    `Qtd. Habitantes (IBGE)` = pop_ibge 
   ) |> 
  mutate(
    `Taxa de aprisionamento` = format(`Taxa de aprisionamento`, big.mark = ".",decimal.mark = ","),
    `Pop. em estabelecimentos` = format(`Pop. em estabelecimentos`, big.mark = ".",decimal.mark = ","),
    `Taxa de penalização` = format(`Taxa de penalização`, big.mark = ".",decimal.mark = ","),
    `Pop. prisional geral` = format(`Pop. prisional geral`, big.mark = ".",decimal.mark = ","),
    `Qtd. Habitantes (IBGE)` = format(`Qtd. Habitantes (IBGE)`, big.mark = ".",decimal.mark = ","),
  )

formattable::formattable(
    t1, 
    align = c("l","c","c","c","c","c"),
    list(
      `Taxa de aprisionamento`= color_tile("lightgrey","lightgray"),
      `Pop. em estabelecimentos`= color_tile("lightgrey","lightgray"),
      `Taxa de penalização`= color_tile("lightblue","lightblue"),
      `Pop. prisional geral`= color_tile("lightblue","lightblue")
      #`Qtd. Habitantes (IBGE)`= color_tile("lightgrey","gray")
  )) |> 
  as.datatable(
    extensions = 'Buttons',
    escape = FALSE,
    #caption = "Tabela: Taxas de ocupação por unidade federativa, tipos de estabelecimento e regime.",
    rownames = FALSE,
    class='hover cell-border stripe',
    filter = "top",
    style = "bootstrap4",
    options = list(
      dom='Bfrtip',
      buttons=c('copy', 'csv', 'excel', 'print', 'pdf'),
      pageLength = 27, 
      autoWidth = TRUE,
      initComplete = JS(
        "function(settings, json) {",
        "$('body').css({'font-family': 'Calibri'});",
        "}"
      ),
      language = list(
        info = 'Mostrando de _START_ para _END_ em um total de _TOTAL_ registros',
        paginate = list(previous = 'Anterior', `next` = 'Seguinte'),
        url = '//cdn.datatables.net/plug-ins/1.10.11/i18n/Portuguese-Brasil.json'
      )
  #pageLength = 5
    )
  )
```

 

O gráfico na @fig-aprisionamento-ufs-sexo-ciclo12 compara as taxas de aprisionamento e penalização entre gêneros.

 

```{r}
#| label: fig-aprisionamento-ufs-sexo-ciclo12
#| fig-cap: >  
#|       Comparação entre as variáveis taxas e gêneros.
#| fig-subcap:
#|     - "Comparação entre gêneros segregada por taxas."
#|     - "Comparação entre taxas segregada por sexo."
#| layout-ncol: 2  

p1 <- 
 readRDS("../data/data_rds/rel07_taxas02.rds") |> 
  filter(
    ciclo == vetor_filtro_ciclo
    ) |> 
  ungroup() |> 
  select(
    sexo,
    tx_aprisionamento,
    tx_penalizacao
  ) |> 
 pivot_longer(
   cols = c(tx_aprisionamento,tx_penalizacao) ,
   names_to = "tipo_taxa",
   values_to = "taxa"
 )|>
  mutate(
    tipo_taxa = case_when(
      tipo_taxa == "tx_aprisionamento" ~ "Taxa de aprisionamento",
      TRUE ~ "Taxa de penalização"
    )
  ) 

p2 <- p1 |> 
  plot_ly(
    x = ~ tipo_taxa,
    y = ~ taxa,
    type = 'bar',
    color = ~ sexo,
    colors =  c("#7F312F","#294661"),
    text = ~ taxa,
    textposition = "auto",
    textfont = list(family = "Calibri",size = 16),
    alpha = 1.0,
     marker = list(
      #color = "#294661",
      #colors = cores,
      line = list(
        color = '#FFFFFF',
        width = 1
        ) #LINHA DE SEPARACAO DOS SETORES
      ),
    showlegend = TRUE
  )
  

p2 <- p2 |> layout(
  dragmode='drawopenpath', # INCLUI A FERRAMENTA PARA DESENHO
  newshape=list(line = list(color='cyan', opacity = 0.5 )), 
  #title = "Tempos médios / 2021",
  uniformtext=list(minsize=8, mode='hide'),
  font = list(family = "Calibri", color = "#294661", size = 14.5),
  xaxis = list(title = ""),
  yaxis = list(title = "Quantidade"),
  legend = list(orientation = "v")
)

# CONFIGURACAO DAS FORMAS DE DESENHO NO GRAFICO
p2 <- config(
  p2,
  modeBarButtonsToAdd = list(
                           'drawline', 
                           'drawopenpath', 
                           'drawclosedpath', 
                           'drawcircle', 
                           'drawrect', 
                           'eraseshape'
                       )
  )  |> 
  layout(plot_bgcolor='#FFFFFF',
          xaxis = list(
            zerolinecolor = '#ffff',
            zerolinewidth = 2,
            gridcolor = 'ffff'),
          yaxis = list(
            zerolinecolor = '#ffff',
            zerolinewidth = 2,
            gridcolor = 'ffff')
          )

p2


p3 <- p1 |> 
  plot_ly(
    x = ~ sexo,
    y = ~ taxa,
    type = 'bar',
    color = ~ tipo_taxa,
    colors =  c("#7F312F","#294661"),
    text = ~ taxa,
    textposition = "auto",
    textfont = list(family = "Calibri",size = 16),
    alpha = 1.0,
     marker = list(
      #color = "#294661",
      #colors = cores,
      line = list(
        color = '#FFFFFF',
        width = 1
        ) #LINHA DE SEPARACAO DOS SETORES
      ),
    showlegend = TRUE
  )
  

p3 <- p3 |> layout(
  dragmode='drawopenpath', # INCLUI A FERRAMENTA PARA DESENHO
  newshape=list(line = list(color='cyan', opacity = 0.5 )), 
  #title = "Tempos médios / 2021",
  uniformtext=list(minsize=8, mode='hide'),
  font = list(family = "Calibri", color = "#294661", size = 14.5),
  xaxis = list(title = ""),
  yaxis = list(title = "Quantidade"),
  legend = list(orientation = "v")
)

# CONFIGURACAO DAS FORMAS DE DESENHO NO GRAFICO
p3 <- config(
  p3,
  modeBarButtonsToAdd = list(
                           'drawline', 
                           'drawopenpath', 
                           'drawclosedpath', 
                           'drawcircle', 
                           'drawrect', 
                           'eraseshape'
                       )
  )  |> 
  layout(plot_bgcolor='#FFFFFF',
          xaxis = list(
            zerolinecolor = '#ffff',
            zerolinewidth = 2,
            gridcolor = 'ffff'),
          yaxis = list(
            zerolinecolor = '#ffff',
            zerolinewidth = 2,
            gridcolor = 'ffff')
          )

p3

```

### Taxas de Aprisionamento e Penalização - Unidades Federativas {#sec-aprisionamento-uf-ciclo12}

A análise dos índices de aprisionamento e penalização continua com a estratificação das taxas por unidade federativa. Nesse sentido, a tabela abaixo evidencia os resultados da relação *"custodiados vs habitantes"*.

 

```{r}
t1 <-  
  readRDS("../data/data_rds/rel07_taxas01.rds") |> 
  filter(ciclo == vetor_filtro_ciclo) |> 
  group_by(uf) |> 
  summarise(
    tx_apris_brasil = round((sum(pop_prisional_fisica) / sum(pop_ibge))*100000, digits = 2),
    pop_prisional_fisica = sum(pop_prisional_fisica, na.rm = TRUE),
    tx_penal_brasil = round((sum(pop_prisional_total) / sum(pop_ibge))*100000, digits = 2),
    pop_prisional_total = sum(pop_prisional_total, na.rm = TRUE),
    pop_ibge = sum(pop_ibge, na.rm = TRUE)
  ) |> 
  select(
    `Unidade Federativa` = uf,
    `Taxa de aprisionamento`= tx_apris_brasil,
    `Pop. em estabelecimentos`= pop_prisional_fisica,
    `Taxa de penalização`= tx_penal_brasil,
    `Pop. prisional geral`= pop_prisional_total,
    `Qtd. Habitantes (IBGE)` = pop_ibge
  ) |> 
  mutate(
    `Taxa de aprisionamento` = format(`Taxa de aprisionamento`, big.mark = ".",decimal.mark = ","),
    `Pop. em estabelecimentos` = format(`Pop. em estabelecimentos`, big.mark = ".",decimal.mark = ","),
    `Taxa de penalização` = format(`Taxa de penalização`, big.mark = ".",decimal.mark = ","),
    `Pop. prisional geral` = format(`Pop. prisional geral`, big.mark = ".",decimal.mark = ","),
    `Qtd. Habitantes (IBGE)` = format(`Qtd. Habitantes (IBGE)`, big.mark = ".",decimal.mark = ","),
  )


formattable::formattable(
    t1, 
    align = c("l","c","c","c","c","c"),
    list(
      `Taxa de aprisionamento`= color_tile("lightgrey","lightgrey"),
      `Pop. em estabelecimentos`= color_tile("lightgrey","lightgrey"),
      `Taxa de penalização`= color_tile("lightblue","lightblue"),
      `Pop. prisional geral`= color_tile("lightblue","lightblue")
      #`Qtd. Habitantes (IBGE)` = color_tile("lightgreen","lightgreen")
      #area(col = c(`População`)) ~ normalize_bar("#F6FF98", 0.2),
  )) |> 
  as.datatable(
    extensions = 'Buttons',
    escape = FALSE,
    #caption = "Tabela: Taxas de ocupação por unidade federativa, tipo de estabelecimento e regime.",
    rownames = FALSE,
    class='hover cell-border stripe',
    filter = "top",
    style = "bootstrap4",
    options = list(
      dom='Bfrtip',
      buttons=c('copy', 'csv', 'excel', 'print', 'pdf'),
      pageLength = 27, 
      autoWidth = TRUE,
      initComplete = JS(
        "function(settings, json) {",
        "$('body').css({'font-family': 'Calibri'});",
        "}"
      ),
      language = list(
        info = 'Mostrando de _START_ para _END_ em um total de _TOTAL_ registros',
        paginate = list(previous = 'Anterior', `next` = 'Seguinte'),
        url = '//cdn.datatables.net/plug-ins/1.10.11/i18n/Portuguese-Brasil.json'
      )
  #pageLength = 5
    )
  )
```

   

A @fig-aprisionamento-ufs-ciclo12 resume graficamente a tabela anterior e realiza a comparação entre as taxas de aprisionamento e penalização para cada estado da federação.

```{r}
#| label: fig-aprisionamento-ufs-ciclo12
#| fig-cap: >  
#|       Comparação entre as taxas de aprisionamento e penalização por estados da federação.

p1 <- 
 readRDS("../data/data_rds/rel07_taxas01.rds") |> 
  filter(
    ciclo == vetor_filtro_ciclo
    ) |> 
  group_by(uf) |>
  summarise(
    tx_aprisionamento = round((sum(pop_prisional_fisica) / sum(pop_ibge))*100000, digits = 2),
    tx_penalizacao = round((sum(pop_prisional_total) / sum(pop_ibge))*100000, digits = 2)
  ) 
  
p1 <- p1 |>
  plot_ly(
    x = ~ uf,
    y = ~ tx_aprisionamento,
    name = "Taxa de aprisionamento",
    type = 'bar',
    text = ~ `tx_aprisionamento`,
    textposition = "auto",
    alpha = 1.0,
    marker = list(color = "#294661")
  )

p1 <- p1 |>
  add_trace(
    y = ~ tx_penalizacao,
    name = "Taxa de penalização",
    type = 'bar',
    text = ~ `tx_penalizacao`,
    textposition = "auto",
    alpha = 1.0,
    marker = list(color = "#7F312F")
  )

p1 <- p1 |> layout(
  dragmode='drawopenpath', # INCLUI A FERRAMENTA PARA DESENHO
  newshape=list(line = list(color='cyan', opacity = 0.5 )), 
  #title = "Tempos médios / 2021",
  uniformtext=list(minsize=8, mode='hide'),
  font = list(family = "Calibri", color = "#294661", size = 14.5),
  xaxis = list(title = ""),
  yaxis = list(title = "Quantidade"),
  legend = list(orientation = "v")
)

# CONFIGURACAO DAS FORMAS DE DESENHO NO GRAFICO
p1 <- config(
  p1,
  modeBarButtonsToAdd = list(
                           'drawline', 
                           'drawopenpath', 
                           'drawclosedpath', 
                           'drawcircle', 
                           'drawrect', 
                           'eraseshape'
                       )
  )  |> 
  layout(plot_bgcolor='#FFFFFF',
          xaxis = list(
            zerolinecolor = '#ffff',
            zerolinewidth = 2,
            gridcolor = 'ffff'),
          yaxis = list(
            zerolinecolor = '#ffff',
            zerolinewidth = 2,
            gridcolor = 'ffff')
          )

p1

```

Para comparação entre gêneros, a tabela abaixo mostra as taxas estudadas neste tópico, separadas por sexo, e destaca a diferença entre as mesmas para cada estado da federação.

 

```{r}
t1 <-  
  readRDS("../data/data_rds/rel07_taxas01.rds") |> 
  filter(
    ciclo == vetor_filtro_ciclo
    ) |> 
  ungroup() |> 
  select(
    uf,
    sexo,
    tx_aprisionamento,
    tx_penalizacao
  ) |> 
  pivot_wider(
    names_from = "sexo",
    values_from = c("tx_aprisionamento","tx_penalizacao")
  ) |> 
  select(
    `Unidade federativa` = uf,
    `Tx de aprisionamento feminino` = tx_aprisionamento_Feminino,
    `Tx de aprisionamento masculino` = tx_aprisionamento_Masculino,
    `Tx de penalização feminina` = tx_penalizacao_Feminino,
    `Tx de penalização masculina` = tx_penalizacao_Masculino,
  )|> 
  mutate(
    `Tx de aprisionamento feminino` = format(`Tx de aprisionamento feminino`, big.mark = ".",decimal.mark = ","),
    `Tx de aprisionamento masculino` = format(`Tx de aprisionamento masculino`, big.mark = ".",decimal.mark = ","),
    `Tx de penalização feminina` = format(`Tx de penalização feminina`, big.mark = ".",decimal.mark = ","),
    `Tx de penalização masculina` = format(`Tx de penalização masculina`, big.mark = ".",decimal.mark = ","),
  )


formattable::formattable(
    t1, 
    align = c("l","c","c","c","c","c"),
    list(
      `Tx de aprisionamento feminino`= color_tile("lightgrey","gray"),
      `Tx de aprisionamento masculino`= color_tile("lightgrey","gray"),
      `Tx de penalização feminina`= color_tile("lightblue","lightblue"),
      `Tx de penalização masculina` = color_tile("lightblue","lightblue")
      #area(col = c(`População`)) ~ normalize_bar("#F6FF98", 0.2),
  )) |> 
  as.datatable(
    extensions = 'Buttons',
    escape = FALSE,
    #caption = "Tabela: Taxas de ocupação por unidade federativa, tipo de estabelecimento e regime.",
    rownames = FALSE,
    class='hover cell-border stripe',
    filter = "top",
    style = "bootstrap4",
    options = list(
      dom='Bfrtip',
      buttons=c('copy', 'csv', 'excel', 'print', 'pdf'),
      pageLength = 27, 
      autoWidth = TRUE,
      initComplete = JS(
        "function(settings, json) {",
        "$('body').css({'font-family': 'Calibri'});",
        "}"
      ),
      language = list(
        info = 'Mostrando de _START_ para _END_ em um total de _TOTAL_ registros',
        paginate = list(previous = 'Anterior', `next` = 'Seguinte'),
        url = '//cdn.datatables.net/plug-ins/1.10.11/i18n/Portuguese-Brasil.json'
      )
  #pageLength = 5
    )
  )
```

   

A @fig-aprisionamento-ufs-sexo2-ciclo12 compara graficamente a taxas de aprisionamento entre gênero, conforme dados da tabela anterior.

```{r}
#| label: fig-aprisionamento-ufs-sexo2-ciclo12
#| fig-cap: >  
#|       Comparação entre as taxas de aprisionamento entre gênero para cada estados da federação.

p1 <- 
 readRDS("../data/data_rds/rel07_taxas01.rds") |> 
  filter(
    ciclo == vetor_filtro_ciclo
    ) |> 
  ungroup() |> 
  select(
    uf,
    sexo,
    tx_aprisionamento,
    tx_penalizacao
  ) |> 
  pivot_wider(
    names_from = "sexo",
    values_from = c("tx_aprisionamento","tx_penalizacao")
  ) 
  
p1 <- p1 |>
  plot_ly(
    x = ~ uf,
    y = ~ tx_aprisionamento_Feminino,
    name = "Taxa de aprisionamento feminino",
    type = 'bar',
    text = ~ `tx_aprisionamento_Feminino`,
    textposition = "auto",
    alpha = 1.0,
    marker = list(color = "#294661")
  )

p1 <- p1 |>
  add_trace(
    y = ~ tx_aprisionamento_Masculino,
    name = "Taxa de aprisionamento masculino",
    type = 'bar',
    text = ~ `tx_aprisionamento_Masculino`,
    textposition = "auto",
    alpha = 1.0,
    marker = list(color = "#7F312F")
  )

p1 <- p1 |> layout(
  dragmode='drawopenpath', # INCLUI A FERRAMENTA PARA DESENHO
  newshape=list(line = list(color='cyan', opacity = 0.5 )), 
  #title = "Tempos médios / 2021",
  uniformtext=list(minsize=8, mode='hide'),
  font = list(family = "Calibri", color = "#294661", size = 14.5),
  xaxis = list(title = ""),
  yaxis = list(title = "Quantidade"),
  legend = list(orientation = "v")
)

# CONFIGURACAO DAS FORMAS DE DESENHO NO GRAFICO
p1 <- config(
  p1,
  modeBarButtonsToAdd = list(
                           'drawline', 
                           'drawopenpath', 
                           'drawclosedpath', 
                           'drawcircle', 
                           'drawrect', 
                           'eraseshape'
                       )
  )  |> 
  layout(plot_bgcolor='#FFFFFF',
          xaxis = list(
            zerolinecolor = '#ffff',
            zerolinewidth = 2,
            gridcolor = 'ffff'),
          yaxis = list(
            zerolinecolor = '#ffff',
            zerolinewidth = 2,
            gridcolor = 'ffff')
          )

p1

```

   

O próximo gráfico (@fig-aprisionamento-ufs-sexo3-ciclo12) repete a metodologia da figura anterior, porém utilizando a taxa de penalização.

```{r}
#| label: fig-aprisionamento-ufs-sexo3-ciclo12
#| fig-cap: >  
#|       Comparação entre as taxas de penalização entre gêneros para cada estado da federação.

p1 <- 
 readRDS("../data/data_rds/rel07_taxas01.rds") |> 
  filter(
    ciclo == vetor_filtro_ciclo
    ) |> 
  ungroup() |> 
  select(
    uf,
    sexo,
    tx_aprisionamento,
    tx_penalizacao
  ) |> 
  pivot_wider(
    names_from = "sexo",
    values_from = c("tx_aprisionamento","tx_penalizacao")
  ) 
  
p1 <- p1 |>
  plot_ly(
    x = ~ uf,
    y = ~ tx_penalizacao_Feminino,
    name = "Taxa de penalizacao feminina",
    type = 'bar',
    text = ~ `tx_penalizacao_Feminino`,
    textposition = "auto",
    alpha = 1.0,
    marker = list(color = "#294661")
  )

p1 <- p1 |>
  add_trace(
    y = ~ tx_penalizacao_Masculino,
    name = "Taxa de penalizacao masculina",
    type = 'bar',
    text = ~ `tx_penalizacao_Masculino`,
    textposition = "auto",
    alpha = 1.0,
    marker = list(color = "#7F312F")
  )

p1 <- p1 |> layout(
  dragmode='drawopenpath', # INCLUI A FERRAMENTA PARA DESENHO
  newshape=list(line = list(color='cyan', opacity = 0.5 )), 
  #title = "Tempos médios / 2021",
  uniformtext=list(minsize=8, mode='hide'),
  font = list(family = "Calibri", color = "#294661", size = 14.5),
  xaxis = list(title = ""),
  yaxis = list(title = "Quantidade"),
  legend = list(orientation = "v")
)

# CONFIGURACAO DAS FORMAS DE DESENHO NO GRAFICO
p1 <- config(
  p1,
  modeBarButtonsToAdd = list(
                           'drawline', 
                           'drawopenpath', 
                           'drawclosedpath', 
                           'drawcircle', 
                           'drawrect', 
                           'eraseshape'
                       )
  )  |> 
  layout(plot_bgcolor='#FFFFFF',
          xaxis = list(
            zerolinecolor = '#ffff',
            zerolinewidth = 2,
            gridcolor = 'ffff'),
          yaxis = list(
            zerolinecolor = '#ffff',
            zerolinewidth = 2,
            gridcolor = 'ffff')
          )

p1

```

## Referências {.unnumbered}
